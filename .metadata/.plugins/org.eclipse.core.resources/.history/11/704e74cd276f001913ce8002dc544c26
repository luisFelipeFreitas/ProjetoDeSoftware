package modelo;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import util.Util;

@Entity
@Table(name = "rota")

public class Personagem {
    private Long id;
    private double preco;
    private String inicio;
    private String destino;

    // Uma rota se refere a uma única frota

    private Jogador frota;
    
    // Uma Rota tem várias paradas
    private List<Parada> paradas = new ArrayList<Parada>();

    // ********* Construtores *********

    public Personagem() {
    }

    public Personagem(double preco, String inicio, String destino, Jogador frota) {
	this.preco = preco;
	this.inicio = inicio;
	this.destino = destino;
	this.frota = frota;
    }

    // ********* Métodos do Tipo Get *********

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ID")
    public Long getId() {
	return id;
    }
    
    
    @Column(nullable = false, name = "preco")
    public double getPreco() {
	return preco;
    }

    @Column(name = "inicio")
    public String getInicio() {
	return inicio;
    }

    @Column(name = "destino")
    public String getDestino() {
	return destino;
    }

    // ********* Métodos do Tipo Set *********

    @SuppressWarnings("unused")
    private void setId(Long id) {
	this.id = id;
    }
    
    
    public void setPreco(double preco) {
	this.preco = preco;
    }

    public void setInicio(String inicio) {
	this.inicio = inicio;
    }
    
    public void setDestino(String destino) {
    	this.destino = destino;
    }

    // ********* Métodos para Associações *********

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "FROTA_ID")
    public Jogador getFrota() {
	return this.frota;
    }

    public void setFrota(Jogador frota) {
	this.frota = frota;
    }
    
    @OneToMany(mappedBy = "Rota")
    @OrderBy
    public List<Parada> getParadas() {
	return this.paradas;
    }

    public void setParadas(List<Parada> paradas) {
	this.paradas = paradas;
    }
}