
import java.util.List;

import corejava.Console;
import excecao.FrotaNaoEncontradaException;
import modelo.Lance;
import modelo.Frota;
import servico.FrotaAppService;
import util.Util;

public class PrincipalFrota {
    public static void main(String[] args) {
	String nome;
	String descricao;
	long qtd_veiculos;

	FrotaAppService frotaAppService = new FrotaAppService();

	boolean continua = true;
	while (continua) {
	    System.out.println('\n' + "O que você deseja fazer?");
	    System.out.println('\n' + "1. Cadastrar um frota");
	    System.out.println("2. Alterar um frota");
	    System.out.println("3. Remover um frota");
	    System.out.println("4. Listar um frota e seus lances");
	    System.out.println("5. Listar todos os frotas e seus lances");
	    System.out.println("6. Sair");

	    int opcao = Console.readInt('\n' + "Digite um número entre 1 e 6:");

	    switch (opcao) {
	    case 1: {
		nome = Console.readLine('\n' + "Informe o nome da frota: ");
		descricao = Console.readLine("Informe a descrição da frota: ");
		qtd_veiculos = Console.readLine("Informe a quantidade de veículos: ");

		Frota frota = new Frota(nome, descricao, qtd_veiculos);

		long numero = frotaAppService.inclui(frota);

		System.out.println('\n' + "Frota número " + numero + " incluída com sucesso!");

		break;
	    }

	    case 2: {
		int resposta = Console.readInt('\n' + "Digite o número do frota que você deseja alterar: ");

		try {
		    umFrota = frotaAppService.recuperaUmFrota(resposta);
		    System.out.println(umFrota.getLances().size());
		} catch (FrotaNaoEncontradoException e) {
		    System.out.println('\n' + e.getMessage());
		    break;
		}

		System.out.println('\n' + "Número = " + umFrota.getId() + "    Nome = " + umFrota.getNome()
			+ "    Salário = " + umFrota.getDescricao());

		System.out.println('\n' + "O que você deseja alterar?");
		System.out.println('\n' + "1. Nome");
		System.out.println("2. Descrição");

		int opcaoAlteracao = Console.readInt('\n' + "Digite um número de 1 a 2:");

		switch (opcaoAlteracao) {
		case 1:
		    String novoNome = Console.readLine("Digite o novo nome: ");
		    umFrota.setNome(novoNome);

		    try {
			frotaAppService.altera(umFrota);

			System.out.println('\n' + "Alteração de nome efetuada com sucesso!");
		    } catch (FrotaNaoEncontradoException e) {
			System.out.println('\n' + e.getMessage());
		    }

		    break;

		case 2:
		    String novaDescricao = Console.readLine("Digite a nova descrição: ");
		    umFrota.setDescricao(novaDescricao);

		    try {
			frotaAppService.altera(umFrota);

			System.out.println('\n' + "Alteração de descrição efetuada " + "com sucesso!");
		    } catch (FrotaNaoEncontradoException e) {
			System.out.println('\n' + e.getMessage());
		    }

		    break;

		default:
		    System.out.println('\n' + "Opção inválida!");
		}

		break;
	    }

	    case 3: {
		int resposta = Console.readInt('\n' + "Digite o número do frota que você deseja remover: ");

		try {
		    umFrota = frotaAppService.recuperaUmFrota(resposta);
		} catch (FrotaNaoEncontradoException e) {
		    System.out.println('\n' + e.getMessage());
		    break;
		}

		System.out.println('\n' + "Número = " + umFrota.getId() + "    Nome = " + umFrota.getNome()
			+ "    Descrição = " + umFrota.getDescricao());

		String resp = Console.readLine('\n' + "Confirma a remoção do frota?");

		if (resp.equals("s")) {
		    try {
			frotaAppService.exclui(umFrota.getId());
			System.out.println('\n' + "Frota removido com sucesso!");
		    } catch (FrotaNaoEncontradoException e) {
			System.out.println('\n' + e.getMessage());
		    }
		} else {
		    System.out.println('\n' + "Frota não removido.");
		}

		break;
	    }

	    case 4: {
		long numero = Console.readInt('\n' + "Informe o número do frota: ");

		try {
		    umFrota = frotaAppService.recuperaUmFrotaELances(numero);
		} catch (FrotaNaoEncontradoException e) {
		    System.out.println('\n' + e.getMessage());
		    break;
		}

		System.out.println('\n' + "Id = " + umFrota.getId() 
		   + "  Nome = " + umFrota.getNome()
		   + "  Descrição = " + umFrota.getDescricao() 
		   + "  Lance mínimo = " + umFrota.getLanceMinimo()
		   + "  Data Cadastro = " + umFrota.getDataCadastroMasc());

		List<Lance> lances = umFrota.getLances();

		for (Lance lance : lances) {
		    System.out.println('\n' + "      Lance número = " + lance.getId() 
		                            + "  Valor = " + lance.getValor()
			                    + "  Data = " + lance.getDataCriacaoMasc());
		}

		break;
	    }

	    case 5: {
		List<Frota> frotas = frotaAppService.recuperaFrotasELances();

		if (frotas.size() != 0) {
		    System.out.println("");

		    for (Frota frota : frotas) {
			System.out.println('\n' + "Frota numero = " + frota.getId() 
			                        + "  Nome = " + frota.getNome() 
			                        + "  Descrição = " + frota.getDescricao() 
			                        + "  Lance mínimo = " + frota.getLanceMinimoMasc() 
			                        + "  Data Cadastro = " + frota.getDataCadastroMasc());

			List<Lance> lances = frota.getLances();

			for (Lance lance : lances) {
			    System.out.println('\n' + "      Lance número = " + lance.getId() 
			                            + "  Valor = " + lance.getValor() 
			                            + "  Data = " + lance.getDataCriacaoMasc());
			}
		    }
		} else {
		    System.out.println('\n' + "Não há frotas cadastrados com esta descrição.");
		}

		break;
	    }

	    case 6: {
		continua = false;
		break;
	    }

	    default:
		System.out.println('\n' + "Opção inválida!");
	    }
	}
    }
}
