package servico;

import java.util.List;

import dao.RotaDAO;
import excecao.InfraestruturaException;
import excecao.ObjetoNaoEncontradoException;
import excecao.RotaNaoEncontradaException;
import modelo.Rota;
import util.FabricaDeDAOs;
import util.JPAUtil;

public class RotaAppService {
    private static RotaDAO rotaDAO = FabricaDeDAOs.getDAO(RotaDAO.class);

    public long inclui(Rota umaRota) {
	try {
	    // NENHUMA VALIDAÇÃO ESTÁ SENDO REALIZADA AQUI!!!

	    JPAUtil.beginTransaction();

	    long numero = rotaDAO.inclui(umaRota);

	    JPAUtil.commitTransaction();

	    return numero;
	} catch (InfraestruturaException e) {
	    try {
		JPAUtil.rollbackTransaction();
	    } catch (InfraestruturaException ie) {
	    }

	    throw e;
	} finally {
	    JPAUtil.closeEntityManager();
	}
    }

    public void altera(Rota umaRota) throws RotaNaoEncontradaException {
	try {
	    JPAUtil.beginTransaction();

	    rotaDAO.altera(umaRota);

	    JPAUtil.commitTransaction();
	} catch (ObjetoNaoEncontradoException e) {
	    JPAUtil.rollbackTransaction();

	    throw new RotaNaoEncontradaException("Rota não encontrado");
	} catch (InfraestruturaException e) {
	    try {
		JPAUtil.rollbackTransaction();
	    } catch (InfraestruturaException ie) {
	    }

	    throw e;
	} finally {
	    JPAUtil.closeEntityManager();
	}
    }

    public void exclui(long numero) throws RotaNaoEncontradaException {
	try {
	    JPAUtil.beginTransaction();

	    rotaDAO.exclui(numero);

	    JPAUtil.commitTransaction();
	} catch (ObjetoNaoEncontradoException e) {
	    JPAUtil.rollbackTransaction();

	    throw new RotaNaoEncontradaException("Rota não encontrado");
	} catch (InfraestruturaException e) {
	    try {
		JPAUtil.rollbackTransaction();
	    } catch (InfraestruturaException ie) {
	    }

	    throw e;
	} finally {
	    JPAUtil.closeEntityManager();
	}
    }

    public Rota recuperaUmaRota(long numero) throws RotaNaoEncontradaException {
	try {
	    Rota umaRota = rotaDAO.recuperaUmaRota(numero);

	    return umaRota;
	} catch (ObjetoNaoEncontradoException e) {
	    throw new RotaNaoEncontradaException("Rota não encontrado");
	} finally {
	    JPAUtil.closeEntityManager();
	}
    }

    public Rota recuperaUmaRotaEParadas(long numero) throws RotaNaoEncontradaException {
	try {
	    return rotaDAO.recuperaUmaRotaEParadas(numero);
	} catch (ObjetoNaoEncontradoException e) {
	    throw new RotaNaoEncontradaException("Rota não encontrado");
	} finally {
	    JPAUtil.closeEntityManager();
	}
    }

    public List<Rota> recuperaRotasEParadas() {
	try {
	    return rotaDAO.recuperaRotasEParadas();
	} finally {
	    JPAUtil.closeEntityManager();
	}
    }
}