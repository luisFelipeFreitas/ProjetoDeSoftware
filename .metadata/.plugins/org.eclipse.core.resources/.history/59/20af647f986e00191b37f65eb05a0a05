package servico;

import java.util.List;

import dao.FrotaDAO;
import excecao.InfraestruturaException;
import excecao.ObjetoNaoEncontradaException;
import excecao.FrotaNaoEncontradaException;
import modelo.Frota;
import util.FabricaDeDAOs;
import util.JPAUtil;

public class FrotaAppService {
    private static FrotaDAO frotaDAO = FabricaDeDAOs.getDAO(FrotaDAO.class);

    public long inclui(Frota umaFrota) {
	try {
	    // NENHUMA VALIDAÇÃO ESTÁ SENDO REALIZADA AQUI!!!

	    JPAUtil.beginTransaction();

	    long numero = frotaDAO.inclui(umaFrota);

	    JPAUtil.commitTransaction();

	    return numero;
	} catch (InfraestruturaException e) {
	    try {
		JPAUtil.rollbackTransaction();
	    } catch (InfraestruturaException ie) {
	    }

	    throw e;
	} finally {
	    JPAUtil.closeEntityManager();
	}
    }

    public void altera(Frota umaFrota) throws FrotaNaoEncontradaException {
	try {
	    JPAUtil.beginTransaction();

	    frotaDAO.altera(umaFrota);

	    JPAUtil.commitTransaction();
	} catch (ObjetoNaoEncontradoException e) {
	    JPAUtil.rollbackTransaction();

	    throw new FrotaNaoEncontradaException("Frota não encontrado");
	} catch (InfraestruturaException e) {
	    try {
		JPAUtil.rollbackTransaction();
	    } catch (InfraestruturaException ie) {
	    }

	    throw e;
	} finally {
	    JPAUtil.closeEntityManager();
	}
    }

    public void exclui(long numero) throws FrotaNaoEncontradaException {
	try {
	    JPAUtil.beginTransaction();

	    frotaDAO.exclui(numero);

	    JPAUtil.commitTransaction();
	} catch (ObjetoNaoEncontradaException e) {
	    JPAUtil.rollbackTransaction();

	    throw new FrotaNaoEncontradaException("Frota não encontrado");
	} catch (InfraestruturaException e) {
	    try {
		JPAUtil.rollbackTransaction();
	    } catch (InfraestruturaException ie) {
	    }

	    throw e;
	} finally {
	    JPAUtil.closeEntityManager();
	}
    }

    public Frota recuperaUmFrota(long numero) throws FrotaNaoEncontradaException {
	try {
	    Frota umFrota = frotaDAO.recuperaUmFrota(numero);

	    return umFrota;
	} catch (ObjetoNaoEncontradaException e) {
	    throw new FrotaNaoEncontradaException("Frota não encontrado");
	} finally {
	    JPAUtil.closeEntityManager();
	}
    }

    public Frota recuperaUmFrotaELances(long numero) throws FrotaNaoEncontradaException {
	try {
	    return frotaDAO.recuperaUmFrotaELances(numero);
	} catch (ObjetoNaoEncontradaException e) {
	    throw new FrotaNaoEncontradaException("Frota não encontrado");
	} finally {
	    JPAUtil.closeEntityManager();
	}
    }

    public List<Frota> recuperaFrotasELances() {
	try {
	    return frotaDAO.recuperaFrotasELances();
	} finally {
	    JPAUtil.closeEntityManager();
	}
    }
}