package dao.impl;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.LockModeType;
import javax.persistence.NoResultException;

import dao.RotaDAO;
import excecao.InfraestruturaException;
import excecao.ObjetoNaoEncontradoException;
import modelo.Rota;
import modelo.Frota;
import util.JPAUtil;

public class RotaDAOImpl implements RotaDAO {
    public long inclui(Rota umaRota) {
	try {
	    EntityManager em = JPAUtil.getEntityManager();

	    em.persist(umaRota);

	    return umaRota.getId();
	} catch (RuntimeException e) {
	    throw new InfraestruturaException(e);
	}
    }
    
    public void altera(Rota umaRota) throws ObjetoNaoEncontradoException {
	try {
	    EntityManager em = JPAUtil.getEntityManager();

	    Rota Frota = em.find(Rota.class, umaRota.getId(), LockModeType.PESSIMISTIC_WRITE);

	    if (Frota == null) {
		throw new ObjetoNaoEncontradoException();
	    }

	    em.merge(umaRota);
	} catch (RuntimeException e) {
	    throw new InfraestruturaException(e);
	}
    }

    public void exclui(long id) throws ObjetoNaoEncontradoException {
	try {
	    EntityManager em = JPAUtil.getEntityManager();

	    Rota rota = em.find(Rota.class, id, LockModeType.PESSIMISTIC_WRITE);

	    if (rota == null) {
		throw new ObjetoNaoEncontradoException();
	    }

	    em.remove(rota);
	} catch (RuntimeException e) {
	    throw new InfraestruturaException(e);
	}
    }

    public Rota recuperaUmaRota(long id) throws ObjetoNaoEncontradoException {
	try {
	    EntityManager em = JPAUtil.getEntityManager();

	    Rota umaRota = (Rota) em.find(Rota.class, new Long(id));

	    if (umaRota == null) {
		throw new ObjetoNaoEncontradoException();
	    }

	    return umaRota;
	} catch (RuntimeException e) {
	    throw new InfraestruturaException(e);
	}
    }
    
    public Rota recuperaUmaRotaComLock(long id) throws ObjetoNaoEncontradoException {
    	try {
    	    EntityManager em = JPAUtil.getEntityManager();

    	    Rota umaRota = em.find(Rota.class, id, LockModeType.PESSIMISTIC_WRITE);

    	    if (umaRota == null) {
    		throw new ObjetoNaoEncontradoException();
    	    }

    	    return umaRota;
    	} catch (RuntimeException e) {
    	    throw new InfraestruturaException(e);
    	}
        }
    
    public Rota recuperaUmaRotaEParadas(long numero) throws ObjetoNaoEncontradoException {
    	try {
    	    EntityManager em = JPAUtil.getEntityManager();

    	    String busca = "select r from rota r left outer join fetch r.paradas where r.id = :id";

    	    Rota umaFrota = (Rota) em.createQuery(busca).setParameter("id", numero).getSingleResult();

    	    return umaFrota;
    	} catch (NoResultException e) {
    	    throw new ObjetoNaoEncontradoException();
    	}
        }
    
    @SuppressWarnings("unchecked")
    public List<Rota> recuperaRotasEParadas() {

	EntityManager em = JPAUtil.getEntityManager();

	List<Rota> Rotas = em
		.createQuery("select distinct r from frota r left outer join fetch r.paradas")
		.getResultList();

	return Rotas;
    }
	
    

    @SuppressWarnings("unchecked")
    public List<Rota> recuperaRotas() {
	EntityManager em = JPAUtil.getEntityManager();

	return em.createQuery("select r from Rota r order by r.id").getResultList();
    }


}
