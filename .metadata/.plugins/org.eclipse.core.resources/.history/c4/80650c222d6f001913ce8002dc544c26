package modelo;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;

import util.Util;

@Entity
@Table(name = "parada")

public class Parada {
    private Long id;
    private double latitude;
    private double longitude;
    private String cidade;

    // Uma parada se refere a uma única rota

    private Personagem personagem;
    
    // Uma Rota tem vários servicos
    private List<Servico> servicos = new ArrayList<servico>();

    // ********* Construtores *********

    public Parada() {
    }

    public Parada(double latitude,double longitude, String cidade, Personagem personagem) {
	this.latitude=latitude;
	this.longitude=longitude;
	this.cidade=cidade;
	this.personagem = personagem;
    }

    // ********* Métodos do Tipo Get *********

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ID")
    public Long getId() {
	return id;
    }
    
    
    @Column(nullable = false, name = "latitude")
    public double getLatitude() {
	return latitude;
    }

    @Column(nullable = false, name = "latitude")
    public double getLongitude() {
	return longitude;
    }
    
    @Column(nullable = false, name = "cidade")
    public String getCidade() {
	return cidade;
    }


    // ********* Métodos do Tipo Set *********

    @SuppressWarnings("unused")
    private void setId(Long id) {
	this.id = id;
    }
    
    public void setLatitude(double latitude) {
		this.latitude = latitude;
	}

	public void setLongitude(double longitude) {
		this.longitude = longitude;
	}

	public void setCidade(String cidade) {
		this.cidade = cidade;
	}

    // ********* Métodos para Associações *********


	@ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ROTA_ID")
    public Personagem getRota() {
	return this.personagem;
    }

    public void seRota(Jogador rota) {
	this.personagem = rota;
    }
    
    @OneToMany(mappedBy = "parada")
    @OrderBy
    public List<Parada> getParadas() {
	return this.paradas;
    }

    public void setParadas(List<Parada> paradas) {
	this.paradas = paradas;
    }
}